name: Update Kaggle Dataset

on:
  schedule:
    - cron: '0 0 * * *'  # Runs daily at midnight UTC
  workflow_dispatch:      # Allows manual trigger

env:
  KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
  KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
  GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

jobs:
  update-dataset:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.21'
          cache: true  # Enable Go module caching

      - name: Cache Chrome
        uses: actions/cache@v3
        with:
          path: /usr/bin/chromium-browser
          key: ${{ runner.os }}-chrome-${{ hashFiles('**/go.sum') }}

      - name: Cache Python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Chrome
        if: steps.cache-chrome.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-browser

      - name: Install Python and Kaggle
        run: |
          python -m pip install --upgrade pip
          pip install kaggle==1.5.16  # Pin version for stability

      - name: Configure Kaggle
        run: |
          mkdir -p ~/.kaggle
          echo "{\"username\":\"$KAGGLE_USERNAME\",\"key\":\"$KAGGLE_KEY\"}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json

      - name: Run Data Collection
        run: go run main.go

      - name: Create dataset-metadata.json
        run: |
          cat << EOF > dataset-metadata.json
          {
            "title": "MIT OpenCourseWare YouTube Course Data",
            "id": "jorgoose/mit-opencourseware-youtube-course-data",
            "licenses": [{"name": "apache-2.0"}],
            "keywords": [
              "education",
              "mit",
              "opencourseware",
              "youtube",
              "course-data",
              "video-analytics",
              "learning"
            ],
            "resources": [],
            "description": "# MIT OpenCourseWare YouTube Course Data\\n\\nThis dataset contains comprehensive course and video information from MIT's OpenCourseWare YouTube channel. The data is automatically updated daily using a Go-based scraper.\\n\\n## Data Collection Methodology\\n- Data is scraped directly from MIT OCW's YouTube channel\\n- Includes all available course playlists and their videos\\n- Uses YouTube's public data\\n- Updated daily via GitHub Actions automation\\n\\n## Features\\n- CourseURL: YouTube playlist URL for the course\\n- CourseTitle: Full title of the MIT course\\n- Position: Sequential position of video in the course playlist\\n- VideoURL: Direct YouTube URL for the specific video\\n- VideoTitle: Title of the individual video\\n- ViewCount: Number of views for each video\\n- Taxonomy: Course subject classification\\n\\n## Use Cases\\n- Educational content analysis\\n- Student engagement patterns\\n- Course popularity trends\\n- Learning analytics research\\n- Educational resource optimization"
          }
          EOF

      - name: Update Kaggle Dataset
        run: |
          # Find the most recent CSV file
          CSV_FILE=$(ls -t mit_courses_*.csv | head -n1)
          echo "Updating dataset with file: $CSV_FILE"
          
          # Create new version
          kaggle datasets version -p ./ -m "Daily update $(date '+%Y-%m-%d')"